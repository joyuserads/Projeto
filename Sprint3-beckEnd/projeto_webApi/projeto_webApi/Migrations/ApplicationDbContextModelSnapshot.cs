// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projeto_webApi;

#nullable disable

namespace projeto_webApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projeto_webApi.Domains.Equipamento", b =>
                {
                    b.Property<int>("IdEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamento"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPatrimonio")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEquipamento");

                    b.HasIndex("NumeroPatrimonio")
                        .IsUnique();

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("projeto_webApi.Domains.Sala", b =>
                {
                    b.Property<int>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSala"));

                    b.Property<string>("Andar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Metragem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdSala");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("projeto_webApi.Domains.SalaEquipamento", b =>
                {
                    b.Property<int>("IdSalaEquipamentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalaEquipamentos"));

                    b.Property<int>("EquipamentoIdEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<int>("SalaIdSala")
                        .HasColumnType("int");

                    b.HasKey("IdSalaEquipamentos");

                    b.HasIndex("EquipamentoIdEquipamento");

                    b.HasIndex("SalaIdSala");

                    b.HasIndex("IdSala", "IdEquipamento")
                        .IsUnique();

                    b.ToTable("SalaEquipamentos");
                });

            modelBuilder.Entity("projeto_webApi.Domains.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<string>("NomeTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdTipoUsuario");

                    b.HasIndex("NomeTipo")
                        .IsUnique();

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("projeto_webApi.Domains.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuarioIdTipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioIdTipoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("projeto_webApi.Domains.Sala", b =>
                {
                    b.HasOne("projeto_webApi.Domains.Usuario", "Usuario")
                        .WithMany("Salas")
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("projeto_webApi.Domains.SalaEquipamento", b =>
                {
                    b.HasOne("projeto_webApi.Domains.Equipamento", "Equipamento")
                        .WithMany("SalaEquipamentos")
                        .HasForeignKey("EquipamentoIdEquipamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto_webApi.Domains.Sala", "Sala")
                        .WithMany("SalaEquipamentos")
                        .HasForeignKey("SalaIdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamento");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("projeto_webApi.Domains.Usuario", b =>
                {
                    b.HasOne("projeto_webApi.Domains.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioIdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("projeto_webApi.Domains.Equipamento", b =>
                {
                    b.Navigation("SalaEquipamentos");
                });

            modelBuilder.Entity("projeto_webApi.Domains.Sala", b =>
                {
                    b.Navigation("SalaEquipamentos");
                });

            modelBuilder.Entity("projeto_webApi.Domains.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("projeto_webApi.Domains.Usuario", b =>
                {
                    b.Navigation("Salas");
                });
#pragma warning restore 612, 618
        }
    }
}
